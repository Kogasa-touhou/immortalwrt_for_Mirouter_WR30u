name: Build ImmortalWrt for WR30U (mt7981)

on:
  workflow_dispatch:
    inputs:
      layout:
        description: "WR30U 分区布局（ubootmod=大分区 / stock=原厂分区）"
        required: true
        default: "ubootmod"
        type: choice
        options:
          - ubootmod
          - stock
      firewall:
        description: "防火墙体系（nft=Firewall4 / ipt=iptables）用于 OpenClash 依赖选择"
        required: true
        default: "nft"
        type: choice
        options:
          - nft
          - ipt

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Init build env (APT deps, timezone, ccache)
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install \
            ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler fastjar flex gawk gettext \
            gcc-multilib g++-multilib git gperf haveged help2man intltool lib32gcc-s1 \
            libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev \
            libmpfr-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool \
            lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip-full patch pkgconf python3 \
            python3-pip python3-ply python3-pyelftools qemu-utils rsync scons squashfs-tools \
            subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo timedatectl set-timezone "$TZ"
          echo 'export CC="ccache gcc"' >> ~/.bashrc
          echo 'export CXX="ccache g++"' >> ~/.bashrc
          echo 'export CCACHE_DIR="$HOME/.ccache"' >> ~/.bashrc
          source ~/.bashrc

      - name: Cache downloads (dl) & ccache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/openwrt/dl
            ~/.ccache
          key: dl-ccache-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            dl-ccache-${{ runner.os }}-

      - name: Clone ImmortalWrt source
        run: |
          git clone --depth 1 --branch "${REPO_BRANCH}" "${REPO_URL}" openwrt
          echo "WORKDIR=$(pwd)" && ls -la

      - name: Add extra packages (OpenClash, ddns-go, Argon theme)
        working-directory: openwrt
        run: |
          # OpenClash（仅拉取 luci-app-openclash）
          git clone --depth 1 https://github.com/vernesong/OpenClash.git tmp-openclash
          mkdir -p package/luci-app-openclash
          rsync -a --delete tmp-openclash/luci-app-openclash/ package/luci-app-openclash/
          rm -rf tmp-openclash

          # ddns-go + LuCI
          git clone --depth 1 https://github.com/sirpdboy/luci-app-ddns-go.git package/ddns-go

          # Argon 主题 + 配置插件
          git clone --depth 1 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          git clone --depth 1 https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config

      - name: Update & install feeds
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate .config for WR30U + packages
        working-directory: openwrt
        run: |
          # 设备布局切换
          if [ "${{ inputs.layout }}" = "ubootmod" ]; then
            DEVICE="xiaomi_mi-router-wr30u-ubootmod"
          else
            DEVICE="xiaomi_mi-router-wr30u-stock"
          fi

          # 防火墙选择影响 OpenClash 依赖（提示用，Kconfig不需硬指定）
          FW="${{ inputs.firewall }}"

          cat > .config <<'EOF'
          CONFIG_TARGET_mediatek=y
          CONFIG_TARGET_mediatek_filogic=y
          # 设备：WR30U（根据布局切换）
          CONFIG_TARGET_mediatek_filogic_DEVICE_xiaomi_mi-router-wr30u-ubootmod=y
          # ↑ 若走 stock 布局，请把上一行改为：
          # CONFIG_TARGET_mediatek_filogic_DEVICE_xiaomi_mi-router-wr30u-stock=y

          # LuCI 与中文、本地化
          CONFIG_PACKAGE_luci=y
          CONFIG_LUCI_LANG_zh_cn=y
          CONFIG_PACKAGE_luci-i18n-base-zh-cn=y

          # 好看主题 Argon + 配置插件
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-app-argon-config=y

          # OpenClash
          CONFIG_PACKAGE_luci-app-openclash=y

          # ddns-go + LuCI
          CONFIG_PACKAGE_ddns-go=y
          CONFIG_PACKAGE_luci-app-ddns-go=y

          # 常用基础组件
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_opkg=y
          CONFIG_PACKAGE_uclient-fetch=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_bash=y

          # Clash TUN 需要
          CONFIG_PACKAGE_kmod-tun=y
          EOF
          # 按 inputs.layout 进行符号位替换
          if [ "$DEVICE" = "xiaomi_mi-router-wr30u-stock" ]; then
            sed -i 's/CONFIG_TARGET_mediatek_filogic_DEVICE_xiaomi_mi-router-wr30u-ubootmod/CONFIG_TARGET_mediatek_filogic_DEVICE_xiaomi_mi-router-wr30u-stock/g' .config
          fi

          make defconfig
          echo "========== Final .config =========="
          grep -E "CONFIG_TARGET_|luci-app-openclash|luci-theme-argon|argon-config|ddns-go|kmod-tun" .config || true

      - name: Download sources
        working-directory: openwrt
        run: |
          make -j$(nproc) download V=s

      - name: Build firmware
        working-directory: openwrt
        run: |
          make -j$(nproc) V=s
          echo "Build done."

      - name: Collect artifacts
        working-directory: openwrt
        run: |
          mkdir -p ${{ github.workspace }}/artifacts
          # 仅打包 WR30U 成品（sysupgrade / manifest）
          find bin/targets -type f \( -name "*wr30u*sysupgrade*.bin" -o -name "*wr30u*manifest*" -o -name "sha256sums" \) -exec cp -v {} ${{ github.workspace }}/artifacts/ \;
          # 同时附带完整 bin 目录（可选）
          tar -C bin -czf ${{ github.workspace }}/artifacts/bin-all.tar.gz targets packages

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-wr30u-${{ inputs.layout }}
          path: artifacts
``
