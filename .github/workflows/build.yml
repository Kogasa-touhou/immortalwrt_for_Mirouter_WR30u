
name: Build ImmortalWrt for WR30U

on:
  workflow_dispatch:
    inputs:
      layout:
        description: "WR30U partition layout (ubootmod=large/stock=vendor)"
        required: true
        default: "ubootmod"
        type: choice
        options: [ubootmod, stock]
      firewall:
        description: "Firewall stack for OpenClash deps (nft or ipt)"
        required: true
        default: "nft"
        type: choice
        options: [nft, ipt]

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init build environment
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install \
            ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler fastjar flex gawk gettext \
            gcc-multilib g++-multilib git gperf haveged help2man intltool lib32gcc-s1 \
            libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev \
            libmpfr-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool \
            lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip-full patch pkgconf python3 \
            python3-ply python3-pyelftools qemu-utils rsync scons squashfs-tools subversion \
            swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo timedatectl set-timezone "$TZ"

      - name: Prepare caches (dl & ccache)
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/openwrt/dl
            ~/.ccache
          key: cache-${{ runner.os }}-${{ github.workflow }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ runner.os }}-${{ github.workflow }}-

      - name: Clone ImmortalWrt
        run: |
          git clone --depth 1 --branch "${REPO_BRANCH}" "${REPO_URL}" openwrt

      - name: Add extra packages (OpenClash / ddns-go / Argon)
        working-directory: openwrt
        run: |
          # OpenClash (LuCI)
          git clone --depth 1 https://github.com/vernesong/OpenClash.git tmp-openclash
          mkdir -p package/luci-app-openclash
          rsync -a tmp-openclash/luci-app-openclash/ package/luci-app-openclash/
          rm -rf tmp-openclash

          # ddns-go (with LuCI)
          git clone --depth 1 https://github.com/sirpdboy/luci-app-ddns-go.git package/ddns-go

          # Argon theme + config
          git clone --depth 1 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon
          git clone --depth 1 https://github.com/jerrykuku/luci-app-argon-config.git package/luci-app-argon-config

      - name: Update & install feeds
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate .config for WR30U
        shell: bash
        working-directory: openwrt
        run: |
          DEVICE="xiaomi_mi-router-wr30u-ubootmod"
          if [ "${{ inputs.layout }}" = "stock" ]; then
            DEVICE="xiaomi_mi-router-wr30u-stock"
          fi

          cat > .config <<EOF
CONFIG_TARGET_mediatek=y
CONFIG_TARGET_mediatek_filogic=y
# Select device (ubootmod or stock)
CONFIG_TARGET_mediatek_filogic_DEVICE_${DEVICE}=y

# LuCI + zh-cn
CONFIG_PACKAGE_luci=y
CONFIG_LUCI_LANG_zh_cn=y
CONFIG_PACKAGE_luci-i18n-base-zh-cn=y

# Argon theme
CONFIG_PACKAGE_luci-theme-argon=y
CONFIG_PACKAGE_luci-app-argon-config=y

# OpenClash
CONFIG_PACKAGE_luci-app-openclash=y

# ddns-go + LuCI
CONFIG_PACKAGE_ddns-go=y
CONFIG_PACKAGE_luci-app-ddns-go=y

# Basics
CONFIG_PACKAGE_ca-bundle=y
CONFIG_PACKAGE_opkg=y
CONFIG_PACKAGE_uclient-fetch=y
CONFIG_PACKAGE_coreutils=y
CONFIG_PACKAGE_curl=y
CONFIG_PACKAGE_ip-full=y
CONFIG_PACKAGE_bash=y

# Clash TUN
CONFIG_PACKAGE_kmod-tun=y
EOF
          make defconfig

      - name: Download sources
        working-directory: openwrt
        run: |
          make -j$(nproc) download V=s

      - name: Build firmware
        working-directory: openwrt
        run: |
          make -j$(nproc) V=s

      - name: Collect WR30U images
        working-directory: openwrt
        run: |
          mkdir -p "$GITHUB_WORKSPACE/artifacts"
          find bin/targets -type f \( -name "*wr30u*sysupgrade*.bin" -o -name "*wr30u*manifest*" -o -name "sha256sums" \) \
            -exec cp -v {} "$GITHUB_WORKSPACE/artifacts/" \;
          tar -C bin -czf "$GITHUB_WORKSPACE/artifacts/bin-all.tar.gz" targets packages

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-wr30u-${{ inputs.layout }}
          path: artifacts
